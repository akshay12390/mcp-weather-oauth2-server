# spring.main.web-application-type=none

# NOTE: You must disable the banner and the console logging
# to allow the STDIO transport to work !!!
spring.main.banner-mode=off
# logging.pattern.console=

# spring.ai.mcp.server.stdio=false

# Server Configuration
server.port=${PORT:8080}
server.servlet.session.cookie.name=WEATHER_MCP_SERVER_SESSION
server.forward-headers-strategy=NATIVE

# Spring Main Configuration
spring.main.allow-bean-definition-overriding=true

# Dynamic Server URL Configuration
app.server.protocol=${HEROKU_APP_NAME:http}
app.server.domain=${HEROKU_APP_NAME:localhost:${server.port}}
app.server.url=${app.server.protocol}://${app.server.domain}${HEROKU_APP_NAME:}${HEROKU_APP_NAME:+.herokuapp.com}
spring.security.oauth2.authorizationserver.issuer=${app.server.url}

# MCP Server Configuration
spring.ai.mcp.server.name=my-weather-server
spring.ai.mcp.server.sse-message-endpoint=/mcp/message
spring.ai.mcp.server.version=0.0.1

# Database Configuration
spring.datasource.url=jdbc:h2:mem:oauth2db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Schema Initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.continue-on-error=false

# H2 Console Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=true
spring.h2.console.settings.web-allow-others=false

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.ai.mcp.sample=DEBUG
logging.level.org.springframework.security.oauth2.server.authorization=DEBUG
logging.level.org.springframework.security.oauth2.server.authorization.authentication=TRACE
logging.level.org.springframework.security.oauth2.server.authorization.token=TRACE
logging.level.org.springframework.security.oauth2.server.authorization.web=TRACE
logging.level.org.springframework.jdbc.core=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%t] --- %-40.40logger{39} : %m%n

# Reduce noise from other Spring components
logging.level.org.springframework.boot=INFO
logging.level.org.springframework.data=WARN
logging.level.org.springframework.jdbc=WARN
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN

# Enable debug for Spring Boot
debug=true

# OAuth2 Debug Logging
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.security.oauth2.server.authorization=TRACE
logging.level.org.springframework.security.oauth2.server.authorization.web=DEBUG
logging.level.org.springframework.security.oauth2.server.authorization.authentication=DEBUG
logging.level.org.springframework.security.oauth2.server.authorization.config=DEBUG
logging.level.org.springframework.security.oauth2.server.authorization.token=DEBUG